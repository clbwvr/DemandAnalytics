/********************************************************************************************************
*
*	PROGRAM:return_forecast.sas	
*	
*	PURPOSE: Macro to generate the return forecast based on the factors generated by return_wrapper and the 
*					demand values	
*
*	MACRO PARAMETERS:
*	----Name-------------------Description-------------------------------------------------------------------
*	libn				Name of SAS library where main output data set resides
*	outlibn				Name of SAS library where output data sets reside
*	indsn_return_factor Name of dataset with factors (format: libname.datasetname)
*	indsn_returns		Name of the dataset with the historical returns
*	outdns				Name of the output dataset (format: datasetname)
*	nlag				Number of lags used in the model
*	by_var				Lowest level in the hierarchy (format: prod_id loc_id)
*	hier_var			List of all hierarchy levels  
*	x					Name of the return variable
*	y					Name of the demand variable
* 	prop				Name of the variable that holds the factors (format: factor_)
*	time_var			Name of the time variable
*	==================================================================================================================
*
*   AUTHORS:	Sofie Michiels (Sofie.Michiels@sas.com), SAS Professional Services & Delivery, Cary, NC, USA
*
*	CREATED:	January 2017
*
********************************************************************************************************************/


%macro return_forecast(	libn=, 
						outlibn=,
						indsn_return_factor=,
						indsn_returns=,
						outdsn=,
						nlag=,
						by_var=,
						hier_var=,
						x=,
						y=,
						prop=,
						time_var=,
						time_int=,
						out_predict_name=
						);

		%let by_var_sql=%sysfunc(tranwrd(&by_var.,%str( ),%str(,)));
		%local i j;

		/*==================================================================================*/
		/*Add season variable to historical return dataset*/
		/*==================================================================================*/

	
		proc sort data=&indsn_returns. out= &outlibn..return;
			by &by_var.  &time_var.;
		run; 

		PROC TIMEDATA data=&outlibn..return out=&outlibn..accum;
			by &by_var ;
			id &time_var. interval=&time_int. ;
			var &x. / accumulate=total;
			var &y. / accumulate=total;
		RUN;QUIT;

		data &outlibn..return_seas;
		set &outlibn..accum;
			_season_ = month(&time_var.);
		run;

		proc sort data= &outlibn..return_seas;
			by &by_var. _season_;
		run;
	

		proc sort data=&indsn_return_factor. out=&outlibn..sort_factor ;
			by &by_var. _season_;
		run;

		data &outlibn..merged_ds;
			merge &outlibn..return_seas (in=a) &outlibn..sort_factor (in=b);
			by &by_var. _season_;
			keep &by_var. _season_ &time_var. &x. &y.
			%do i = 0 %to &nlag.;
				&prop.&i.
			%end;
			;
			/*
			if a and b and (&y. ne .); 
			*/
			%do j = 0 %to &nlag.;
				if &prop.&j. ne .;
			%end;		
		
		run;

	/*==================================================================================*/
	/*	For each row, create as many rows as the number of lags, where the forecasted return fraction for */
	/*	the current period is the  product of the sales quantity and the first proportion, the next period */
	/*	is the product of the sales quantity and the second proportion, etc*/
	/*==================================================================================*/
		data tmp1.return_distr; set merged_ds; run;
      data &outlibn..return_distr;
			set &outlibn..merged_ds;
			keep &by_var. _season_ &time_var. fcst_return_fraction;
			temp_date=&time_var.;
			%do i = 0 %to &nlag.;
				future_date=intnx('week',temp_date,&i.);
				&time_var.=future_date;			
				fcst_return_fraction = &y. * &prop.&i.;
				output;		
			%end;
		run;

		proc sql noprint;
			create table &outlibn..return_fcst_tmp as 
			select &by_var_sql.,&time_var., sum(fcst_return_fraction) as &out_predict_name.
			from &outlibn..return_distr
			group by &by_var_sql.,&time_var.;
		quit;

		proc sort data=&outlibn..return_fcst_tmp;
			by &by_var. &time_var.;
		run;

		proc sort data= &outlibn..accum;
			by &by_var. &time_var.;
		run;

		data &libn..&outdsn.;
			merge &outlibn..return_fcst_tmp (in=a) &outlibn..accum (in=b);
			by &by_var. &time_var.;
			keep &by_var. &time_var. &out_predict_name. &x. &y.;
			if a and b;			
		run;

	/*==================================================================================*/
	/*  delete intermediate files  */
	/*==================================================================================*/

		proc datasets lib=&outlibn. nodetails nolist;
			delete return
					return_seas
					accum
					sort_factor
					merged_ds
					return_distr
					return_fcst_tmp
					;
		run;quit;
/*==================================================================================*/
%mend return_forecast;
