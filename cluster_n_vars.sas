/********************************************************************************************************
*
*	PROGRAM: 
*
*	MACRO PARAMETERS:
*	----Name-------------------Description-------------------------------------------------------------------
*	libn					name of SAS library where input data set resides
*	outlibn					name of SAS library where output data sets reside
*	dsn						data set name of input file
*	outdsn_exc				name of output file containig rows excluded from the cluster training
*	outdsn_center			name of output file with cluster center distribtuion - adds to one for each by variable
*	outdsn_byvar			name of output file at the cluster by variable level
*	outdsn_all				name of file that contains the original input file and the cluster column	
*	y 						cluster variable
*	byvar_clus				by variables level that is used by clustering
*	maxclus					maximum number of clusters generated by PROC FASTCLUS 
*	threshold				if the incremental performnace measure on adding a cluster (PROC CLUSTER) is less than threshold, then stop 
*	k						cluster parameter used by PROC MODECLUS
*	cluster_method			use Fast=PROC FASTCLUS, or Mode=PROC MODECLUS  
*	cluster_distance_metric	distance metrix to use, e.g. Ward or Density
*	cluster_name			name of cluster variable
*----set in MACRO-----*
*	prefix_use		prefix for distribution variables
*	==================================================================================================================
*   AUTHOR:	Christian Haxholdt, Ph.D. (christian.haxholdt@sas.com), SAS Professional Services & Delivery, Cary, NC, USA
*
*	CREATED:	February, 2015
*  	 
********************************************************************************************************************/


/* ==== Cluster Macro === */

%MACRO cluster_n_vars(	libn=, 
						outlibn=, 
						dsn=,
						outdsn_center=_outdsn_center,
						outdsn_byvar=_outdsn_byvar,
						y=,
						maxclus=200,
						minclus=2, 
						threshold=0.05, 
						k=10,
						cluster_method=Fast,
						cluster_distance_metric=ward,
						cluster_name=cluster
						);



ods noresults;
/*==================================================================================================================================*/
/* Internal variables 																 			*/
/*==================================================================================================================================*/

%let cluster_q=1;

/*==================================================================================================================================*/
/* Program abort if parameter setting for cluster is wrong																			 											                                                     	*/
/*==================================================================================================================================*/

%if (&cluster_method=Fast or &cluster_method=Mode) %then %do;
%end;
%else %do;
	%let cluster_method=Fast;
	%put ERROR: The parameter Cluster_method in macro call, must equal 'Fast' or 'Mode' - it is set to 'Fast';
%end;

/*==================================================================================*/
* Perform cluster analysis;
/*==================================================================================*/		

%if (&cluster_method=Fast) %then %do;
	PROC FASTCLUS data=&dsn summary maxc=&maxclus maxiter=99 converge=0 drift cluster=Pre_Clus_Fast out=&outlibn..pre_clus_fast mean=&outlibn..cluster_mean noprint;
		var &y;
	RUN;QUIT;

	PROC MEANS data=&outlibn..pre_clus_fast noprint;
		var Pre_Clus_Fast;
		output out=&outlibn..pre_clus_fast_stat(drop=_type_ _freq_) STD(Pre_Clus_Fast)=STD;
	RUN;QUIT; 

	DATA _NULL_;
		set &outlibn..pre_clus_fast_stat;
		if (STD=0) then do;
		 	call symput('cluster_q',0);
		end;
	RUN;

	%if (&cluster_q=1) %then %do;
		PROC CLUSTER data=&outlibn..cluster_mean method=&cluster_distance_metric pseudo ccc outtree=&outlibn..cluster_tree;
			var &y;
			copy Pre_Clus_Fast;
		RUN;QUIT;

		PROC SORT data=&outlibn..cluster_tree;
			by _NCL_;
		RUN;

		DATA &outlibn..optimal_clusters;
			set &outlibn..cluster_tree;
		 	if (_SPRSQ_ < &threshold and _NCL_>&minclus) then delete;
		RUN;

		DATA &outlibn..optimal_clusters;
			set &outlibn..optimal_clusters;
			call symput('ncl_F', _ncl_);
		RUN;

		PROC TREE data=&outlibn..cluster_tree ncl=&ncl_F out=&outlibn..tree(rename=(cluster=_cluster_)) noprint;
			copy Pre_Clus_Fast;
		RUN;QUIT;
	%end;
	%else %do;
		DATA &outlibn..tree(drop=&y);
			set &outlibn..pre_clus_fast;
			_cluster_=Pre_Clus_Fast;
			_NAME_=.;
			clusname=.;
			put ERROR: There is only one cluster generated from PROC FASTCLUS;
		RUN;
	%end;
%end;

%if (&cluster_method=Mode) %then %do;
	PROC MODECLUS data=&outlibn..Prob_transpose m=1 k=&k out=&outlibn..mode_clus_season;
		var &y;
	RUN;QUIT;
%end;

/*==================================================================================*/
* Merge FAST Cluster results back on original data set;
/*==================================================================================*/

%if (&cluster_method=Fast) %then %do;
	PROC SORT data=&outlibn..pre_clus_fast;
		by Pre_Clus_Fast;
	RUN;QUIT; 
	
	PROC SORT data=&outlibn..tree;
		by Pre_Clus_Fast;
	RUN;QUIT;

	DATA &outlibn..fast_clus_season(drop = _cluster_ distance clusname _NAME_  pre_clus_fast);
		merge &outlibn..pre_clus_fast &outlibn..tree;
		by Pre_Clus_Fast;
		if (_cluster_=.) then &cluster_name=0;
		&cluster_name=_cluster_;
	RUN; 

	PROC SORT data=&outlibn..fast_clus_season out=&outlibn..cluster_center;
		by &cluster_name;
	RUN;QUIT;

	PROC MEANS data=&outlibn..cluster_center noprint;
		by &cluster_name;
		var &y;
		output out=&libn..&outdsn_center(drop=_type_ _freq_) mean=mean median=median std=std max=max min=min N=N;
	RUN;QUIT;

	DATA &libn..&outdsn_byvar;
		merge &dsn &outlibn..fast_clus_season;
	RUN;
%end;

/*==================================================================================*/
* Merge Mode back on original data set;
/*==================================================================================*/
/*
	%if (&cluster_method=Mode) %then %do;	
		PROC SORT data=&outlibn..mode_clus_season out=&libn..&outdsn_cluster;
			by &byvar_clus;
		RUN;QUIT;

		DATA &libn..&outdsn_all(drop = Cluster DENSITY _OBS_ _METHOD_ _K_ &prefix_use:);
			merge &outlibn..data_ready &libn..&outdsn_cluster;
			by &byvar_clus;
			if (cluster=.) then cluster=0;
			&cluster_name=cluster;
		RUN;
	%end;

/*==================================================================================*/
/*   delete intermediate files */
/*==================================================================================*/

	PROC DATASETS library=&outlibn memtype=data nolist;
		delete  dsn_sort
				timedata 
				cluster_mean
				pre_clus_fast
				pre_clus_fast_stat
				cluster_tree
				optimal_clusters
				tree 
				sum_cluster
				cluster_center_calc
				cluster_center
				fast_clus_season 
				mode_clus_season
				;
	RUN;QUIT;  

%MEND cluster_n_vars;

/*%cluster_n_vars(libn=ss, */
/*				outlibn=ss_out, */
/*				dsn=ss.pricedata_test,*/
/*				y=sale price discount*/
/*				);*/

